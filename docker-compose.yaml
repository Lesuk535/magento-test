version: '3.8'

services:
  nginx:
    build:
      context: docker/nginx
    volumes:
      - ./:/app
    container_name: ${PROJECT_NAME}-nginx
    restart: always
    ports:
      - "8084:80"
    depends_on:
      - php-fpm

  php-fpm:
    build:
      context: docker/php-fpm
    volumes:
      - ./:/app
    container_name: ${PROJECT_NAME}-php-fpm
    depends_on:
      - mysql

  php-cli:
    build:
      context: docker/php-cli
    volumes:
      - ./:/app
    command: sleep 10000
    container_name: ${PROJECT_NAME}-php-cli

  node:
    image: node:15.3.0-alpine3.10
    volumes:
      - ./:/var/www
    working_dir: /var/www
    tty: true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: ${PROJECT_NAME}-elasticsearch
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
      - "xpack.security.enabled=false"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql-data:/var/lib/mysql
    container_name: ${PROJECT_NAME}-mysql
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_USER=app"
      - "MYSQL_PASSWORD=secret"
      - "MYSQL_DATABASE=app"
    ports:
      - "33063:3306"

volumes:
  elasticsearch-data:
  mysql-data:
